import Head from "next/head";
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useState } from "react";
import { useCreateUserMutation } from "@/features/apiUser";
import { useRouter } from "next/router";
import Link from "next/link";
export default function Create() {
  let [createUser] = useCreateUserMutation();
  let router = useRouter();
  let [input, setInput] = useState({ name: "", email: "", password: "" });

  let cancels = () => {
    router.push("/user");
  };

  let handlerSubmit = (e) => {
    e.preventDefault();
    createUser(input).then((res) => {
      if (res.data) {
        setInput({ name: "", email: "", password: "" });
        toast.success(res.data.message, {
          position: "top-right",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "colored",
        });
        router.push("/user");
      }
      if (res.error) {
        toast.error(res.error.data.message, {
          position: "top-right",
          autoClose: 5000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "dark",
        });
      }
    });
  };

  let showPw = (e) => {
    e.preventDefault();
    let temp = document.getElementById("password");
    let but = document.getElementById("a");
    if (temp.type === "password") {
      temp.type = "text";
      but.innerText = "Hide password";
    } else {
      temp.type = "password";
      but.innerText = "Show password";
    }
  };

  const handleChange = (e) => {
    const value = e.target.value;
    const name = e.target.name;

    setInput({
      ...input,
      [name]: value,
    });
  };
  return (
    <>
      <Head>
        <title>Create user</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/log.png" />
      </Head>
      <div className="w-screen h-screen grid grid-cols-12 grid-rows-6">
        <div className="col-start-5 col-end-9 row-start-2 row-end-6 outline outline-1 rounded-[2px] outline-[#00ADB5] flex flex-row">
          <div className="w-full grid grid-cols-12 h-full grid grid-rows-6">
            <div className="col-start-2 col-end-12 h-full row-span-6 grid grid-rows-6 p-[10px]">
              <div className="text-[25px] text-center font-semibold row-span-1">
                Create new User
              </div>
              <div className="row-start-2 ">
                <div>
                  <form
                    onSubmit={handlerSubmit}
                    className="w-full flex flex-col gap-y-[20px]"
                  >
                    <div>
                      <input
                        name="name"
                        type="text"
                        className="outline outline-1 outline-[#393E46]/10 focus:outline-[#393E46] p-[10px] w-full rounded-[1px]"
                        placeholder="Name"
                        onChange={handleChange}
                        value={input.name}
                      />
                    </div>
                    <div>
                      <input
                        name="email"
                        type="email"
                        className="outline outline-1 outline-[#393E46]/10 focus:outline-[#393E46] p-[10px] w-full rounded-[1px]"
                        placeholder="Email"
                        onChange={handleChange}
                        value={input.email}
                      />
                    </div>
                    <div>
                      <div>
                        <input
                          name="password"
                          type="password"
                          className="outline outline-1 outline-[#393E46]/10 focus:outline-[#393E46] p-[10px] w-full rounded-[1px]"
                          placeholder="Password"
                          id="password"
                          onChange={handleChange}
                          value={input.password}
                        />
                      </div>
                      <div>
                        <button
                          id="a"
                          onClick={showPw}
                          className="text-[13px] italic font-semibold"
                        >
                          Show password
                        </button>
                      </div>
                    </div>
                    <div>
                      <button
                        type="submit"
                        className=" text-white bg-[#00ADB5]  p-[10px] w-full rounded-[1px]"
                      >
                        Create user
                      </button>
                    </div>
                  </form>
                </div>
                <div className="mt-[10px]">
                  <button
                    onClick={cancels}
                    className="transition-colors duration-700 outline outline-1 outline-[#393E46] hover:text-white hover:bg-[#393E46]  p-[10px] w-full rounded-[1px]"
                  >
                    Cancel
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
